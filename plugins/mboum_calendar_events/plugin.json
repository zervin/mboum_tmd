{
  "version": 1,
  "uuid": "mboum-calendar-events",
  "iconURL": "https://www.linology.com/images/market_core.png",
  "emoji": "ðŸ“…",
  "title": "MBOUM Calendar Events",
  "openaiSpec": {
    "name": "mboum_calendar_events",
    "description": "Access Mboum's financial calendar events API, focusing on time-sensitive financial events such as earnings announcements, IPOs, stock splits, dividend payments, and economic events. This plugin provides data about upcoming and past financial events to help with investment planning and market analysis.",
    "parameters": {
      "type": "object",
      "required": [
        "requestDetails"
      ],
      "properties": {
        "requestDetails": {
          "type": "object",
          "description": "An object containing the target Mboum calendar events endpoint and its specific parameters.",
          "required": [
            "endpoint",
            "queryParams"
          ],
          "properties": {
            "endpoint": {
              "type": "string",
              "description": "The specific calendar events endpoint to query",
              "enum": ["earnings", "ipo", "splits", "dividends", "economic"],
              "example": "earnings"
            },
            "queryParams": {
              "type": "object",
              "description": "Parameters for the chosen endpoint",
              "properties": {
                "ticker": {
                  "type": "string",
                  "description": "Stock symbol or comma-separated list of symbols to filter events (applicable for earnings, splits, dividends)",
                  "example": "AAPL"
                },
                "from": {
                  "type": "string",
                  "description": "Start date for events in YYYY-MM-DD format (for ipo, splits, economic)",
                  "example": "2023-01-01"
                },
                "to": {
                  "type": "string",
                  "description": "End date for events in YYYY-MM-DD format (for ipo, splits, economic)",
                  "example": "2023-12-31"
                },
                "date": {
                  "type": "string",
                  "description": "Specific date for events in YYYY-MM-DD format (alternative to from/to range)",
                  "example": "2023-06-15"
                },
                "page": {
                  "type": "integer",
                  "description": "Page number for paginated results (starting from 1)",
                  "example": 1
                },
                "size": {
                  "type": "integer",
                  "description": "Number of results per page",
                  "example": 50
                },
                "country": {
                  "type": "string",
                  "description": "Country code to filter economic events (applicable for economic endpoint)",
                  "example": "US"
                },
                "importance": {
                  "type": "string",
                  "description": "Importance level of economic events (applicable for economic endpoint)",
                  "enum": ["high", "medium", "low"],
                  "example": "high"
                },
                "days": {
                  "type": "integer",
                  "description": "Number of days to look ahead for events (applicable for earnings and dividends endpoints)",
                  "example": 7
                },
                "start_date": {
                  "type": "string",
                  "description": "Start date for events in YYYY-MM-DD format (for earnings and dividends endpoints)",
                  "example": "2023-01-01"
                },
                "end_date": {
                  "type": "string",
                  "description": "End date for events in YYYY-MM-DD format (for earnings and dividends endpoints)",
                  "example": "2023-12-31"
                }
              }
            }
          }
        }
      }
    }
  },
  "implementationType": "javascript",
  "id": "mboum_calendar_events",
  "method": "GET"
}
